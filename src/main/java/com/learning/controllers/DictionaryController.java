package com.learning.controllers;

import com.learning.models.Dictionary;
import com.learning.utils.DictionaryRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

@Controller    // This means that this class is a Controller
@RequestMapping(path="/dictionary") // This means URL's start with /demo (after Application path)
public class DictionaryController {
	@Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private DictionaryRepository DictionaryRepository;
	
	@GetMapping(path="/add") // Map ONLY GET Requests
	public @ResponseBody String addNewWord(@RequestParam String word
			, @RequestParam String explanation) {
		// @ResponseBody means the returned String is the response, not a view word
		// @RequestParam means it is a parameter from the GET or POST request
		
		Dictionary n = new Dictionary();
		n.setWord(word);
		n.setExplanation(explanation);
		DictionaryRepository.save(n);
		return "Saved";
	}

	@RequestMapping("/view")
	public @ResponseBody Dictionary getDictionaryId(@RequestParam Integer id) {
		return DictionaryRepository.findOne(id);
	}

	@GetMapping("/edit")
	public String editWord(Model model, @RequestParam Integer id) {
		model.addAttribute("word", DictionaryRepository.findOne(id));
		return "dictionary_edit";
	}

	@PostMapping("/edit")
	public String saveWord(@ModelAttribute Dictionary word) {
		DictionaryRepository.save(word);
		return "dictionary_list";
	}

	@RequestMapping("/list")
	public String getDictionaryList(Model model) {
		model.addAttribute("dictionary", DictionaryRepository.findAll());
		return "dictionary_list";
	}
}
